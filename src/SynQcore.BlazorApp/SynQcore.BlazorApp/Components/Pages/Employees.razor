@page "/employees"
@rendermode InteractiveServer
@using SynQcore.BlazorApp.Services
@using SynQcore.BlazorApp.Services.StateManagement
@inject StateManager StateManager
@inject NavigationManager Navigation
@inject IEmployeeService EmployeeService

<PageTitle>Colaboradores - SynQcore</PageTitle>

<h1>Colaboradores</h1>

@if (!StateManager.User.IsAuthenticated)
{
    <p>Você precisa estar autenticado.</p>
    <button @onclick='@(() => Navigation.NavigateTo("/login"))'>Fazer Login</button>
}
else
{
    <div>
        <button @onclick='@(() => Navigation.NavigateTo("/employees/create"))'>Novo Colaborador</button>
    </div>

    <section>
        <h2>Lista de Colaboradores</h2>
        
        @if (isLoading)
        {
            <p>Carregando...</p>
        }
        else if (employees == null || !employees.Any())
        {
            <p>Nenhum colaborador encontrado.</p>
        }
        else
        {
            <table>
                <thead>
                    <tr>
                        <th>Nome</th>
                        <th>Email</th>
                        <th>Departamento</th>
                        <th>Cargo</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in employees)
                    {
                        <tr>
                            <td>@employee.Nome</td>
                            <td>@employee.Email</td>
                            <td>@employee.DepartamentoNome</td>
                            <td>@employee.Cargo</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </section>
}

@code {
    private List<dynamic>? employees;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        if (StateManager.User.IsAuthenticated)
        {
            await LoadEmployees();
        }
    }

    private async Task LoadEmployees()
    {
        isLoading = true;
        try
        {
            // Implementar chamada ao serviço
            employees = new List<dynamic>();
        }
        catch
        {
            employees = new List<dynamic>();
        }
        finally
        {
            isLoading = false;
        }
    }
}
