@page "/login"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using SynQcore.BlazorApp.Services.StateManagement
@using SynQcore.BlazorApp.Models
@using SynQcore.Application.DTOs.Auth
@using SynQcore.BlazorApp.Store.User
@using SynQcore.BlazorApp.Services
@inject StateManager StateManager
@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject ILocalAuthService LocalAuthService
@inject IJSRuntime JS
@layout Components.Layout.MainLayout

<PageTitle>Login - SynQcore</PageTitle>

<div class="container-fluid p-0 min-vh-100 d-flex align-items-center">
    <div class="row g-0 w-100">
        <!-- Lado Esquerdo - Branding (Desktop) -->
        <div class="col-lg-6 d-none d-lg-flex">
            <div class="bg-gradient-primary text-white d-flex align-items-center w-100 p-6">
                <div class="w-100">
                    <div class="text-center mb-6">
                        <div class="d-inline-flex align-items-center justify-content-center bg-white bg-opacity-10 rounded-circle mb-4" style="width: 80px; height: 80px;">
                            <i class="ri ri-at-line ri-3x"></i>
                        </div>
                        <h1 class="display-4 fw-bold mb-3">
                            Syn<span class="text-warning">Q</span>core
                        </h1>
                        <p class="lead mb-4">Conecte-se, colabore e cresça com sua equipe</p>
                    </div>

                    <!-- Features Premium -->
                    <div class="row g-4">
                        <div class="col-12">
                            <div class="d-flex align-items-center">
                                <div class="bg-white bg-opacity-20 rounded-circle d-flex align-items-center justify-content-center me-4" style="width: 48px; height: 48px;">
                                    <i class="ri ri-team-line ri-lg"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1 fw-semibold">Colaboração em Tempo Real</h6>
                                    <small class="opacity-75">Conecte equipes distribuídas globalmente</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="d-flex align-items-center">
                                <div class="bg-white bg-opacity-20 rounded-circle d-flex align-items-center justify-content-center me-4" style="width: 48px; height: 48px;">
                                    <i class="ri ri-shield-check-line ri-lg"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1 fw-semibold">Segurança Avançada</h6>
                                    <small class="opacity-75">Proteção completa de dados corporativos</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="d-flex align-items-center">
                                <div class="bg-white bg-opacity-20 rounded-circle d-flex align-items-center justify-content-center me-4" style="width: 48px; height: 48px;">
                                    <i class="ri ri-brain-line ri-lg"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1 fw-semibold">Gestão de Conhecimento</h6>
                                    <small class="opacity-75">IA inteligente para organizar informações</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="d-flex align-items-center">
                                <div class="bg-white bg-opacity-20 rounded-circle d-flex align-items-center justify-content-center me-4" style="width: 48px; height: 48px;">
                                    <i class="ri ri-bar-chart-line ri-lg"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1 fw-semibold">Analytics Avançados</h6>
                                    <small class="opacity-75">Insights poderosos sobre engajamento</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lado Direito - Formulário -->
        <div class="col-lg-6">
            <div class="d-flex align-items-center justify-content-center min-vh-100 p-6">
                <div class="w-100" style="max-width: 400px;">
                    <!-- Header Mobile -->
                    <div class="text-center mb-6 d-lg-none">
                        <div class="d-inline-flex align-items-center justify-content-center bg-primary bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                            <i class="ri ri-at-line ri-2x text-primary"></i>
                        </div>
                        <h3 class="fw-bold">SynQcore</h3>
                    </div>

                    <!-- Form Header -->
                    <div class="text-center mb-5">
                        <h2 class="h3 fw-bold mb-2">Bem-vindo de volta!</h2>
                        <p class="text-muted">Entre com suas credenciais para continuar</p>
                    </div>

                    @if (showError)
                    {
                        <div class="alert alert-danger border-0 mb-4" role="alert">
                            <div class="d-flex align-items-center">
                                <i class="ri ri-error-warning-line me-2"></i>
                                <span>@errorMessage</span>
                            </div>
                        </div>
                    }

                    @if (showSuccess)
                    {
                        <div class="alert alert-success border-0 mb-4" role="alert">
                            <div class="d-flex align-items-center">
                                <i class="ri ri-check-line me-2"></i>
                                <span>Login realizado com sucesso! Redirecionando...</span>
                            </div>
                        </div>
                    }

                    <!-- Login Form -->
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
                        <DataAnnotationsValidator />

                        <!-- Email Field -->
                        <div class="synq-input-group mb-4">
                            <label for="email" class="form-label fw-medium">Email</label>
                            <div class="position-relative">
                                <InputText @bind-Value="loginModel.Email" 
                                         class="form-control form-control-lg" 
                                         id="email" 
                                         placeholder="seu@email.com"
                                         disabled="@isLoading" />
                                <i class="ri ri-mail-line input-icon"></i>
                            </div>
                            <ValidationMessage For="@(() => loginModel.Email)" class="text-danger small mt-1" />
                        </div>

                        <!-- Password Field -->
                        <div class="synq-input-group mb-4">
                            <label for="password" class="form-label fw-medium">Senha</label>
                            <div class="position-relative">
                                <InputText @bind-Value="loginModel.Password" 
                                         type="@(showPassword ? "text" : "password")" 
                                         class="form-control form-control-lg" 
                                         id="password" 
                                         placeholder="Digite sua senha"
                                         disabled="@isLoading" />
                                <i class="ri ri-lock-line input-icon"></i>
                                <button type="button" 
                                        class="btn btn-link position-absolute end-0 top-50 translate-middle-y pe-3 border-0 bg-transparent"
                                        @onclick="TogglePasswordVisibility"
                                        disabled="@isLoading">
                                    <i class="ri @(showPassword ? "ri-eye-off-line" : "ri-eye-line") text-muted"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger small mt-1" />
                        </div>

                        <!-- Forgot Password -->
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <div></div>
                            <a href="/forgot-password" class="text-decoration-none">
                                <small>Esqueceu a senha?</small>
                            </a>
                        </div>

                        <!-- Login Button -->
                        <button type="submit" 
                                class="btn btn-primary btn-lg w-100 mb-4" 
                                disabled="@isLoading">
                            @if (isLoading)
                            {
                                <div class="d-flex align-items-center justify-content-center">
                                    <i class="ri ri-loader-line ri-loading me-2"></i>
                                    <span>Entrando...</span>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex align-items-center justify-content-center">
                                    <i class="ri ri-login-box-line me-2"></i>
                                    <span>Entrar</span>
                                </div>
                            }
                        </button>
                    </EditForm>

                    <!-- Divider -->
                    <div class="text-center mb-4">
                        <div class="position-relative">
                            <hr class="my-4">
                            <span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">
                                ou
                            </span>
                        </div>
                    </div>

                    <!-- Alternative Actions -->
                    <div class="text-center">
                        <p class="text-muted mb-3">Não tem uma conta?</p>
                        <a href="/register" class="btn btn-outline-primary btn-lg w-100 mb-3">
                            <i class="ri ri-user-add-line me-2"></i>
                            Criar Conta
                        </a>
                        
                        <!-- Demo Access -->
                        <div class="mt-4 p-3 bg-light rounded-3">
                            <p class="small text-muted mb-2">
                                <strong>Acesso de demonstração:</strong>
                            </p>
                            <div class="row g-2 text-start">
                                <div class="col-6">
                                    <small class="d-block"><strong>Admin:</strong></small>
                                    <small class="text-muted">admin@synqcore.com</small>
                                </div>
                                <div class="col-6">
                                    <small class="d-block"><strong>Senha:</strong></small>
                                    <small class="text-muted">admin123</small>
                                </div>
                            </div>
                            <button type="button" 
                                    class="btn btn-sm btn-outline-secondary mt-2 w-100" 
                                    @onclick="FillDemoCredentials"
                                    disabled="@isLoading">
                                <i class="ri ri-magic-line me-1"></i>
                                Usar credenciais demo
                            </button>
                        </div>
                    </div>

                    <!-- Footer -->
                    <div class="text-center mt-5">
                        <small class="text-muted">
                            &copy; 2024 SynQcore. Todos os direitos reservados.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private SynQcore.Application.DTOs.Auth.LoginRequest loginModel = new();
    private bool showPassword = false;
    private bool isLoading = false;
    private bool showError = false;
    private bool showSuccess = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Redirecionar se já estiver logado
        if (StateManager.User.IsAuthenticated)
        {
            Navigation.NavigateTo("/");
            return;
        }

        // Verificar autenticação via localStorage
        var isAuthenticatedFromJS = await LocalAuthService.IsAuthenticatedAsync();
        if (isAuthenticatedFromJS)
        {
            Navigation.NavigateTo("/");
            return;
        }
    }

    private async Task HandleLogin()
    {
        if (isLoading) return;

        try
        {
            isLoading = true;
            showError = false;
            showSuccess = false;
            StateHasChanged();

            // Simular delay de rede
            await Task.Delay(1000);

            var result = await AuthService.LoginAsync(loginModel.Email, loginModel.Password);

            if (result)
            {
                showSuccess = true;
                StateHasChanged();

                // Aguardar um pouco para mostrar o sucesso
                await Task.Delay(1500);

                // Redirecionar para o dashboard ou página anterior
                var returnUrl = Navigation.GetUriWithQueryParameter("returnUrl", (string?)null);
                var targetUrl = !string.IsNullOrEmpty(returnUrl) ? returnUrl : "/";
                Navigation.NavigateTo(targetUrl, true);
            }
            else
            {
                errorMessage = "Erro ao realizar login. Verifique suas credenciais e tente novamente.";
                showError = true;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro interno: {ex.Message}";
            showError = true;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private void FillDemoCredentials()
    {
        if (isLoading) return;

        loginModel.Email = "admin@synqcore.com";
        loginModel.Password = "admin123";
        StateHasChanged();
    }
}