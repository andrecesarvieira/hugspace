@* COMENTADO - usando StateManager
@using Fluxor
@using SynQcore.BlazorApp.Services
@inject IStateInitializationService StateInitialization
@inject IDispatcher Dispatcher
*@
@implements IAsyncDisposable

@* Renderiza sempre o conteúdo - sem loading state *@
@ChildContent

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private bool hasRendered = false;

    protected override void OnInitialized()
    {
        // Inicialização básica sem JavaScript interop
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRendered)
        {
            hasRendered = true;

            try
            {
                // COMENTADO - usando StateManager
                // await StateInitialization.InitializeAfterRenderAsync();
                Console.WriteLine("[AppInitializer] Inicialização com StateManager");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"[AppInitializer] Erro na inicialização: {ex.Message}");
            }
        }
        
        return Task.CompletedTask;
    }

    public ValueTask DisposeAsync()
    {
        // Cleanup se necessário
        return ValueTask.CompletedTask;
    }
}
